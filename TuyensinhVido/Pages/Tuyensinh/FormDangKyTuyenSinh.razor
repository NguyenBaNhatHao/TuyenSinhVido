@page "/dangky"
@using System.Net.Http.Headers
@using Tewr.Blazor.FileReader
@using TuyensinhVido.Models
@using System.IO
@using System.Drawing
@inject ILogger<Tuyensinh> Logger
@inject IWebHostEnvironment Environment
@inject IFileReaderService fileReader
@inject ITuyenhsinhService tuyensinhService
@inject HttpClient client
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
<h3>FormDangKyTuyenSinh</h3>
<EditForm Model="tuyensinh" OnSubmit="HandleSubmit">
    <div>
        <label for="hoten">Ho ten</label>
        <InputText id="hoten" @bind-Value="tuyensinh.Hoten" class="form-control" />
    </div>
    <div>
        <label for="cmnd">CMND</label>
        <InputText id="cmnd" @bind-Value="tuyensinh.CMND" class="form-control" />
    </div>
    <div>
        <label for="sdt">SDT</label>
        <InputText id="sdt" @bind-Value="tuyensinh.SDT" class="form-control" />
    </div>
    <div>
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="tuyensinh.Email" class="form-control" />
    </div>
    <div>
        <label for="ngaysinh">Ngay sinh</label>
        <InputDate id="ngaysinh" @bind-Value="tuyensinh.Ngaysinh" class="form-control" />
    </div>
        
    <div>
        <label for="nganh">Nganh</label>
        <InputSelect id="nganh" @bind-Value="tuyensinh.NganhId" @onclick="SelectValues" class="form-control">
            @foreach (var dept in tuyensinhService.NganhServices)
            {
                <option value="@dept.id">@dept.ten</option>
            }
        </InputSelect>
    </div>
    <div>
        <img src="@image" style="width: 250px; height: 250px;" /><br /><br />
        <InputFile id="hocba" OnChange="@OnInputFileChanged" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>
    <br />
    
</EditForm>
@code {
    [Parameter]
    public int? Id { get; set; }
    Tuyensinh tuyensinh = new Tuyensinh();
    string btnText = string.Empty;
    [Parameter]
    public string ImgUrl { get; set; }
    [Parameter]
    public EventCallback<string> OnChange { get; set; }
    Image image { get; set; }
    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save" : "Update";
    }
    async Task HandleSubmit()
    {
        if (tuyensinh.NganhId == null || tuyensinh.Hoten == null || tuyensinh.Email == null || tuyensinh.SDT == null || tuyensinh.Hocba == null)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Warning!");
            bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Xin hãy nhập đủ dữ liệu");
        }
        else if (Id == null && (tuyensinh.NganhId != null || tuyensinh.Hoten != null || tuyensinh.Email != null || tuyensinh.SDT != null || tuyensinh.Hocba != null))
        {
            
            await tuyensinhService.CreateTuyensinh(tuyensinh);
        }
    }
    async Task Cancel()
    {
        NavigationManager.NavigateTo("");
    }
    async Task SelectValues(){
        await tuyensinhService.GetNganhDetail();
    }
    async Task OnInputFileChanged (InputFileChangeEventArgs e){
        var imageFiles = e.GetMultipleFiles();
        foreach (var imageFile in imageFiles)
        {
            if (imageFile != null)
            {
                var resizedFile = await imageFile.RequestImageFileAsync("image/png", 300, 500);

                using (var ms = resizedFile.OpenReadStream(resizedFile.Size))
                {
                    var content = new MultipartFormDataContent();
                    content.Headers.ContentDisposition = new ContentDispositionHeaderValue("form-data");
                    content.Add(new StreamContent(ms, Convert.ToInt32(resizedFile.Size)), "file", imageFile.Name);
                    ImgUrl = await tuyensinhService.UploadProductImage(content);
                    //var bytes = Convert.FromBase64String(ImgUrl);
                    //using (var mes = new MemoryStream(bytes))
                    //{
                    //    image = Image.FromStream(mes, true);
                    //}
                    await OnChange.InvokeAsync(ImgUrl);
                    tuyensinh.Hocba = ImgUrl;
                }
            }
        }
    }
}
